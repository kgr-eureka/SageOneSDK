# coding: utf-8

"""
    Sage Business Cloud Accounting - Accounts

    Documentation of the Sage Business Cloud Accounting API.  # noqa: E501

    The version of the OpenAPI document: 3.1
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import openapi_client
from openapi_client.models.contact_person import ContactPerson  # noqa: E501
from openapi_client.rest import ApiException

class TestContactPerson(unittest.TestCase):
    """ContactPerson unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ContactPerson
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = openapi_client.models.contact_person.ContactPerson()  # noqa: E501
        if include_optional :
            return ContactPerson(
                legacy_id = 56, 
                id = '0', 
                displayed_as = '0', 
                path = '0', 
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                deleted_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                contact_person_types = [
                    openapi_client.models.contact_person_type.ContactPersonType(
                        legacy_id = 56, 
                        id = '0', 
                        displayed_as = '0', 
                        __path = '0', )
                    ], 
                name = '0', 
                job_title = '0', 
                telephone = '0', 
                mobile = '0', 
                email = '0', 
                fax = '0', 
                is_main_contact = True, 
                address = openapi_client.models.base.Base(
                    legacy_id = 56, 
                    id = '0', 
                    displayed_as = '0', 
                    __path = '0', ), 
                is_preferred_contact = True
            )
        else :
            return ContactPerson(
        )

    def testContactPerson(self):
        """Test ContactPerson"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
